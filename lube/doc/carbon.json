{
  /* 篇章级信息 */
  "discourse": {
    "topic": "", // 篇章主题，字符串
    "dateline": "", // 电头，字符串
    "lead": "", // 导语，字符串
    "abstract": "" // 摘要，字符串
  },

  /* 篇章结构树 */
  "roots": [
    {
      "childs": [
        {
          "childs": [],
          "center": 2,
          "function": "",
          "type": ""
        }, // 这个结点是一个Relation，
        // 上面这个结点是一个非常特殊的Relation
        // 尽管一个被正确标注的树不应该有非Paragraph类型的叶子结点，但是这样并不违背语法规则

        {
          "function": "",
          "topic": "",
          "content": ""
        } // 这个结点是一个Paragraph
      ], // 子结点列表

      "center": 2, // 子结点中心，对应childs中的下标（从0开始），如果为-1，则没有中心（并列关系）
      "function": "", // 功能，字符串
      "type": "" // 类型，字符串
    }, // 这个结点是一个Relation

    {
      "function": "", // 功能，字符串
      "topic": "", // 段落主题，字符串
      "content": "" // 内容，字符串
    } // 结点里有些类型是Paragraph，他们在属性成员上有区别，最显著的区别是没有childs属性

    // 虽然一个标注审核后的Corpus对象成品，它的roots属性应该只有1个元素，但是零或多个根结点仍然是被接受的。
  ]
  // 注意roots和childs是有顺序的（有序树）
}
